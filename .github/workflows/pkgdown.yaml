on:
  push:
    branches: master

name: pkgdown

jobs:
  pkgdown:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: macOS-r-4.0-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: macOS-r-4.0-1-

      - name: "[Custom block] [linux] Install spatial libraries"
        if: runner.os == 'Linux'
        run: sudo apt-get install libgdal-dev libproj-dev libgeos-dev libudunits2-dev

      - name: "[Custom block] [linux] Install pkgdown libraries"
        if: runner.os == 'Linux'
        run: sudo apt-get install libharfbuzz-dev libfribidi-dev

      - name: "[Custom block] [macOS] Install spatial libraries"
        if: runner.os == 'macOS'
        run: |
          # conflicts with gfortran from r-lib/actions when linking gcc
          rm '/usr/local/bin/gfortran'
          brew install pkg-config gdal proj geos

      - name: "[Custom block] [macOS] Install spatial libraries"
        if: runner.os == 'macOS'
        run: |
          brew install pkg-config harfbuzz fribidi

      - name: Install dependencies
        run: |
          install.packages("remotes")
          install.packages("rgdal", type = "source", configure.args = "--with-proj-lib=/usr/local/lib/ --with-proj-include=/usr/local/include/")
          remotes::install_deps(dependencies = TRUE)
          remotes::install_dev("pkgdown")
        shell: Rscript {0}

      - name: Install package
        run: R CMD INSTALL .

      - name: Deploy package
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          Rscript -e 'pkgdown::deploy_to_branch(new_process = FALSE)'
